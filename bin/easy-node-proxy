#!/usr/bin/env node

'use strict';

const path = require("path");
const program = require("commander");
const chalk = require("chalk");
const argv = require("optimist").boolean("cors").argv;
const shell = require("shelljs");
const rootPath = path.resolve(__dirname,"..");

program
  .option(
    "-t, --target",
    "specify the target proxy server [http://www.exmaple.com]"
  )
  .option("-h,--host", "setup your proxy host to use [localhost]")
  .option("-r,--rewrite", "rewrite your proxy to use [rewrite path]")
  .option("-o,--oldPath", "specify you want to proxy's old path [/api]")
  .option("-p,--port", "setup your proxy port to use [8000]");

program
  .command("start")
  .description("start your proxy server")
  .action(function() {
    if (!argv.t) {
      console.log(
        chalk.red(`You must specify the targetProxy, please write the correct targetProxy!
For example:http://www.example.com`)
      );
      process.exit();
    }

    const port = argv.p || "8000";
    const host = argv.h || "0.0.0.0";
    const rewritePath = argv.r || "/";
    const oldPath = argv.o || "^/";

    process.env.targetProxy = argv.t.trim();
    process.env.port = (port + "").trim();
    process.env.host = host.trim();
    process.env.rewritePath = rewritePath.trim();
    process.env.oldPath = oldPath.trim();

    shell.exec(`cd ${rootPath} && npm run prod`);
    console.log(chalk.green("start your proxy server"));
  });

program
  .command("stop")
  .description("stop your proxy server")
  .action(function() {
    shell.exec(`cd ${rootPath} && npm run stop`);
    console.log(chalk.green("stop your proxy server"));
  });

program.parse(process.argv);
